$:.unshift("../../lib")

platform = ENV['PLATFORM'] || 'ios'
require "motion/project/template/#{platform}"

ENV['output'] ||= 'pretty_spec_dox'

Motion::Project::App.setup do |app|
  # Use `rake config' to see complete project settings.
  app.name = 'test'
  app.frameworks += ['AddressBook', 'AddressBookUI', 'CoreData', 'CoreMIDI', 'GameKit', 'AudioToolbox']
  app.vendor_project('vendor/code', :static)

  app.spec_files.insert(1, *FileList['../helpers/*.rb'])
  app.deployment_target = ENV['deployment_target'] if ENV['deployment_target']

  app.archs[app.local_platform] = [ENV['ARCH']] if ENV['ARCH']
end

namespace :spec do
  task :clean_run => [:clean, :spec]

  test_fail_count = []

  task :install_aggregate_test_handler do
    at_exit do
      count = test_fail_count.inject(0) { |i, sum| sum + i }
      if test_fail_count.size > 1
        App.info "TESTING", "A total of #{count} failures/errors occurred"
      end
      exit count
    end
  end

  archs = { '32' => 'i386', '64' => 'x86_64' }

  [:ios, :osx].each do |platform|
    namespace platform do
      archs.each do |bit, arch|
        desc "Run tests on #{platform} (#{bit}-bit)"
        task bit => :install_aggregate_test_handler do
          App.info "TESTING", "Running test suite on platform: #{platform} (#{bit}-bit)"
          begin
            sh "env PLATFORM=#{platform} ARCH=#{arch} rake spec:clean_run"
          rescue RuntimeError
            test_fail_count << $?.exitstatus
          end
        end
      end
    end

    desc "Run tests on #{platform} for all archs"
    task platform => archs.keys.map { |arch| "spec:#{platform}:#{arch}" }
  end

  desc 'Run tests on iOS and OS X'
  task :all => [:ios, :osx]
end

# TODO enable this once full test suite works on OS X.
#task :default => 'spec:all'
